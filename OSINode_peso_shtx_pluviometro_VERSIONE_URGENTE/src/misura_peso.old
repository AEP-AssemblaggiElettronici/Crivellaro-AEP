#include <Arduino.h>
#include <avr/wdt.h>
#include "Wire.h"
#include "defines.h"

long int misura_peso(int pin, int clock)
{
    byte data[3] = {0, 0, 0};
    long rawData;

    pinMode(pin, INPUT);    // pin dout
    pinMode(clock, OUTPUT); // pin slk

     while (digitalRead(pin))
         ; // aspetta che il pin sia su

    for (int i = 3; i--;) // raccoglie i bit per il valore di peso grezzo
    {
        for (char j = 8; j--;)
        {
            digitalWrite(clock, 1);
            delayMicroseconds(30);
            data[i] |= (digitalRead(pin) << j);
            digitalWrite(clock, 0);
            delayMicroseconds(30);
        }
    }

    digitalWrite(clock, 1);
    delayMicroseconds(1);
    digitalWrite(clock, 0);
    delayMicroseconds(1);

    rawData = ((long)data[2] << 8) | (long)data[1]; // tira fuori il risultato, tronca il bit meno significativo

    // Converti in valore signed
    if (rawData & 0x800000)
        rawData |= 0xFF000000; // Valori negativi

    return rawData;
}

unsigned long int pesa(int pin, int clk, unsigned long offset)
{
    unsigned long misurazioni[10];
    unsigned long mediaGrezza = 0;
    unsigned long somma = 0;
    unsigned long differenza = 0;
    unsigned long deviazione = 0;
    unsigned char datiValidi = 0;
    unsigned long rawData = 0;

    for (int i = 0; i < 10; i++)
    {
        misurazioni[i] = misura_peso(pin, clk);
        delay(100);
    }

    for (int i = 0; i < 10; i++)
        mediaGrezza += misurazioni[i];

    mediaGrezza /= 10;

    // scarto quadratico medio:
    for (int i = 0; i < 10; i++)
    {
        differenza = misurazioni[i] > mediaGrezza ? misurazioni[i] - mediaGrezza : mediaGrezza - misurazioni[i];
        somma += differenza * differenza;
    }
    deviazione = sqrt(somma / 10);

    // filtro i valori:
    somma = 0;
    for (int i = 0; i < 10; i++)
    {
        if (abs(misurazioni[i] - mediaGrezza) <= 2 * deviazione)
        {
            somma += misurazioni[i];
            datiValidi++;
        }
    }

    rawData = datiValidi > 0 ? somma / datiValidi : 0;

#if DEBUG
    Serial.print("Peso (byte): ");
    Serial.print(rawData, HEX);
    Serial.println();
    Serial.print("Peso taratura (byte): ");
    Serial.print(offset, HEX);
    Serial.println();
    Serial.print("Peso netto (byte): ");
    Serial.print(rawData - offset < 0 ? 0 : rawData - offset, HEX);
    Serial.println();
/*     Serial.print("Peso (grammi): ");
    Serial.print((rawData - offset) * SCALA_PESO);
    Serial.println(); */
#endif

    if (offset)
    {
        rawData -= offset;
        if (rawData < 0)
            return 0;
        return rawData;
    }

    return rawData;
}

long converti_peso(long peso)
{
#if DEBUG
    Serial.print("Peso in grammi: ");
    Serial.print(peso < 0 ? 0 : peso * SCALA_PESO) * 2;
    Serial.println();
#endif
    return (peso * SCALA_PESO);
}